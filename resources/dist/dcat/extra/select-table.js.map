{"version":3,"file":"/resources/dist/dcat/extra/select-table.js","mappings":"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","sources":["webpack:///./resources/assets/dcat/extra/select-table.js"],"sourcesContent":["(function (w) {\r\n    function SelectTable(options) {\r\n        options = $.extend({\r\n            dialog: null,\r\n            container: null,\r\n            input: null,\r\n            button: '.submit-btn',\r\n            cancel: '.cancel-btn',\r\n            table: '.async-table',\r\n            multiple: false,\r\n            max: 0,\r\n            values: [],\r\n            lang: {\r\n                exceed_max_item: Dcat.lang.exceed_max_item || '已超出最大可选择的数量',\r\n            },\r\n        }, options);\r\n\r\n        let self = this;\r\n\r\n        self.options = options;\r\n        self.$input = $(options.input);\r\n        self.selected = {}; // 保存临时选中的ID\r\n\r\n        self.init();\r\n    }\r\n\r\n    SelectTable.prototype = {\r\n        init() {\r\n            let self = this,\r\n                options = self.options,\r\n                values = options.values;\r\n\r\n            self.labels = {};\r\n\r\n            for (let i in values) {\r\n                self.labels[values[i]['id']] = values[i]['label']\r\n            }\r\n\r\n            // 保存临时选中的值\r\n            self.resetSelected();\r\n\r\n            $(document).on('dialog:shown', options.dialog, function () {\r\n                self.$dialog = $(options.dialog);\r\n                self.$button = self.$dialog.find(options.button);\r\n                self.$cancel = self.$dialog.find(options.cancel);\r\n\r\n                // 提交按钮\r\n                self.$button.on('click', function () {\r\n                    var selected = self.getSelectedRows();\r\n\r\n                    self.setKeys(selected[1]);\r\n\r\n                    self.render(selected[0]);\r\n\r\n                    self.$dialog.trigger('dialog:close');\r\n\r\n                    // 重置已选中数据\r\n                    self.resetSelected();\r\n                });\r\n\r\n                // 取消按钮\r\n                self.$cancel.on('click', function () {\r\n                    self.$dialog.trigger('dialog:close');\r\n                });\r\n\r\n                // 绑定相关事件\r\n                self.bind();\r\n\r\n                // 重置已选中数据\r\n                self.resetSelected();\r\n            });\r\n\r\n            // 渲染选中的数据\r\n            self.render(values);\r\n        },\r\n\r\n        bind() {\r\n            let self = this,\r\n                options = self.options;\r\n\r\n            // 表格加载完成事件\r\n            self.$dialog.find(options.table).on('table:loaded', function () {\r\n                let checkbox = self.getCheckbox();\r\n\r\n                if (! options.multiple) {\r\n                    // 移除全选按钮\r\n                    $(this).find('.checkbox-grid-header').remove();\r\n                }\r\n\r\n                checkbox.on('change', function () {\r\n                    let $this = $(this),\r\n                        id = $this.data('id'),\r\n                        label = $this.data('label');\r\n\r\n                    if (this.checked) {\r\n                        if (! options.multiple) {\r\n                            self.selected = {};\r\n                        }\r\n                        self.selected[id] = {id: id, label: label};\r\n\r\n                        // 多选\r\n                        if (options.max && (self.getSelectedRows()[0].length > options.max)) {\r\n                            $this.prop('checked', false);\r\n                            delete self.selected[id];\r\n\r\n                            return Dcat.warning(self.options.lang.exceed_max_item);\r\n                        }\r\n                    } else {\r\n                        delete self.selected[id];\r\n                    }\r\n\r\n                    if (! options.multiple) {\r\n                        if (this.checked) {\r\n                            // 单选效果\r\n                            checkbox.each(function () {\r\n                                let $this = $(this);\r\n\r\n                                if ($this.data('id') != id) {\r\n                                    $this.prop('checked', false);\r\n                                    $this.parents('tr').css('background-color', '');\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                });\r\n\r\n                // 选中默认选项\r\n                checkbox.each(function () {\r\n                    let $this = $(this),\r\n                        current = $this.data('id');\r\n\r\n                    // 保存label字段\r\n                    self.labels[current] = $this.data('label');\r\n\r\n                    for (let i in self.selected) {\r\n                        if (current == i) {\r\n                            $this.prop('checked', true).trigger('change');\r\n\r\n                            continue;\r\n                        }\r\n                    }\r\n\r\n                    $this.trigger('change');\r\n                });\r\n            })\r\n        },\r\n\r\n        // 重置已选中数据\r\n        resetSelected() {\r\n            let self = this,\r\n                keys = self.getKeys();\r\n\r\n            self.selected = {};\r\n\r\n            for (let i in keys) {\r\n                self.selected[keys[i]] = {id: keys[i], label: self.labels[keys[i]]};\r\n            }\r\n        },\r\n\r\n        getCheckbox() {\r\n            return this.$dialog.find('.checkbox-grid-column input[type=\"checkbox\"]');\r\n        },\r\n\r\n        getSelectedRows() {\r\n            let self = this,\r\n                selected = [],\r\n                ids = [];\r\n\r\n            for (let i in self.selected) {\r\n                if (! self.selected[i]) {\r\n                    continue;\r\n                }\r\n\r\n                ids.push(i);\r\n                selected.push(self.selected[i])\r\n            }\r\n\r\n            return [selected, ids];\r\n        },\r\n\r\n        render(selected) {\r\n            let self = this,\r\n                options = self.options,\r\n                box = $(options.container),\r\n                placeholder = box.find('.default-text'),\r\n                option = box.find('.option');\r\n\r\n            if (! selected || ! selected.length) {\r\n                placeholder.removeClass('d-none');\r\n                option.addClass('d-none');\r\n\r\n                if (options.multiple) {\r\n                    box.addClass('form-control');\r\n                }\r\n\r\n                return;\r\n            }\r\n\r\n            placeholder.addClass('d-none');\r\n            option.removeClass('d-none');\r\n\r\n            if (! options.multiple) {\r\n                return renderDefault(selected, self, options);\r\n            }\r\n\r\n            return renderMultiple(selected, self, options);\r\n        },\r\n\r\n        setKeys(keys) {\r\n            // 手动触发change事件，方便监听值变化\r\n            this.$input.val(keys.length ? keys.join(',') : '').trigger('change');\r\n        },\r\n\r\n        deleteKey(key) {\r\n            let val = this.getKeys(),\r\n                results = [];\r\n\r\n            for (let i in val) {\r\n                if (val[i] != key) {\r\n                    results.push(val[i])\r\n                }\r\n            }\r\n\r\n            this.setKeys(results)\r\n        },\r\n\r\n        getKeys() {\r\n            let val = this.$input.val();\r\n\r\n            if (! val) return [];\r\n\r\n            return String(val).split(',');\r\n        },\r\n    };\r\n\r\n    // 多选\r\n    function renderMultiple(selected, self, options) {\r\n        let html = [],\r\n            box = $(options.container),\r\n            placeholder = box.find('.default-text'),\r\n            option = box.find('.option');\r\n\r\n        if (! box.hasClass('select2')) {\r\n            box.addClass('select2 select2-container select2-container--default select2-container--below');\r\n        }\r\n        box.removeClass('form-control');\r\n\r\n        for (let i in selected) {\r\n            html.push(`<li class=\"select2-selection__choice\" >\r\n    ${selected[i]['label']} <span data-id=\"${selected[i]['id']}\" class=\"select2-selection__choice__remove remove \" role=\"presentation\"> ×</span>\r\n</li>`);\r\n        }\r\n\r\n        html.unshift('<span class=\"select2-selection__clear remove-all\">×</span>');\r\n\r\n        html = `<span class=\"select2-selection select2-selection--multiple\">\r\n <ul class=\"select2-selection__rendered\">${html.join('')}</ul>\r\n </span>`;\r\n\r\n        var $tags = $(html);\r\n\r\n        option.html($tags);\r\n\r\n        $tags.find('.remove').on('click', function () {\r\n            var $this = $(this);\r\n\r\n            self.deleteKey($this.data('id'));\r\n\r\n            $this.parent().remove();\r\n\r\n            if (! self.getKeys().length) {\r\n                removeAll();\r\n            }\r\n        });\r\n\r\n        function removeAll() {\r\n            option.html('');\r\n            placeholder.removeClass('d-none');\r\n            option.addClass('d-none');\r\n\r\n            box.addClass('form-control');\r\n\r\n            self.setKeys([]);\r\n        }\r\n\r\n        $tags.find('.remove-all').on('click', removeAll);\r\n    }\r\n\r\n    // 单选\r\n    function renderDefault(selected, self, options) {\r\n        let box = $(options.container),\r\n            placeholder = box.find('.default-text'),\r\n            option = box.find('.option');\r\n\r\n        var remove = $(\"<div class='pull-right ' style='font-weight:bold;cursor:pointer'>×</div>\");\r\n\r\n        option.text(selected[0]['label']);\r\n        option.append(remove);\r\n\r\n        remove.on('click', function () {\r\n            self.setKeys([]);\r\n            placeholder.removeClass('d-none');\r\n            option.addClass('d-none');\r\n        });\r\n    }\r\n\r\n    Dcat.grid.SelectTable = function (opts) {\r\n        return new SelectTable(opts)\r\n    };\r\n})(window)"],"names":["SelectTable","options","$","extend","dialog","container","input","button","cancel","table","multiple","max","values","lang","exceed_max_item","Dcat","self","this","$input","selected","init","prototype","i","labels","resetSelected","document","on","$dialog","$button","find","$cancel","getSelectedRows","setKeys","render","trigger","bind","checkbox","getCheckbox","remove","$this","id","data","label","checked","length","prop","warning","each","parents","css","current","keys","getKeys","ids","push","box","placeholder","option","addClass","removeClass","html","hasClass","concat","unshift","join","$tags","removeAll","deleteKey","parent","renderMultiple","text","append","renderDefault","val","key","results","String","split","grid","opts","window"],"sourceRoot":""}